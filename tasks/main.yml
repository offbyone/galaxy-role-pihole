---
- name: Ensure docker group exists
  become: yes
  group:
    name: docker
    state: present

- name: Ensure '{{ raspberry_user }}' user is added to docker group
  become: yes
  user:
    name: '{{ raspberry_user }}'
    groups: docker
    append: yes

- name: Ensure aufs-tools apt preferences is set to not instal
  become: yes
  copy:
    dest: /etc/apt/preferences.d/aufs-tools
    src: files/aufs-tools

- name: Ensure docker is installed
  include_role:
    name: geerlingguy.docker
  vars:
    ansible_become: yes
  register: docker_install

- name: Ensure docker python library is installed
  become: yes
  package:
    name: python3-docker
    state: present
    
- name: Ensure Docker api is started
  wait_for:
    timeout: 60

- name: provide custom environment variables
  template:
    src: pihole.env.j2
    dest: "{{ ansible_user_dir}}/etc-pihole.env"

- name: Ensure pihole docker container is running
  become: yes
  docker_container:
    name: pihole
    image: "pihole/pihole:{{ pihole_docker_tag }}"
    state: started
    restart: "{{ pihole_pull }}"
    pull: "{{ pihole_pull }}"
    restart_policy: unless-stopped
    ports:
    - '53:53/udp' #dns
    - '53:53/tcp' #dns
    - '67:67/udp' #dhcp
    - '80:80/tcp' #web interface
    - '443:443/tcp' #web interface
    volumes:
    - ./etc-pihole/:/etc/pihole/
    - ./etc-dnsmasq.d/:/etc/dnsmasq.d/
    env_file: "{{ ansible_user_dir}}/etc-pihole.env"
    env:
      DNS1: '{{ dns_server1 }}'
      DNS2: '{{ dns_server2 }}'
      WEBPASSWORD: "{{ pihole_admin_password }}"


- name: Install custom templates
  template:
    src: "{{ item.src }}"
    dest: "{{ ansible_user_dir }}/etc-dnsmasq.d/{{ item.name }}"
  with_items: "{{ pihole_dnsmasq_templates }}"

- name: add LAN forwarding to pi-hole setup - enable
  lineinfile:
    path: "{{ ansible_user_dir }}/etc-pihole/setupVars.conf"
    regexp: "^CONDITIONAL_FORWARDING=(.*)"
    line: "CONDITIONAL_FORWARDING=true"
  notify: restart pihole container
  when: pihole_conditional_forwarding is defined and pihole_conditional_forwarding|length > 0

- name: add LAN forwarding to pi-hole setup - ip
  lineinfile:
    path: "{{ ansible_user_dir }}/etc-pihole/setupVars.conf"
    regexp: "^CONDITIONAL_FORWARDING_IP=(.*)"
    line: "CONDITIONAL_FORWARDING_IP={{ pihole_conditional_forwarding.router_ip }}"
  notify: restart pihole container
  when: pihole_conditional_forwarding is defined and pihole_conditional_forwarding|length > 0

- name: add LAN forwarding to pi-hole setup - domain
  lineinfile:
    path: "{{ ansible_user_dir }}/etc-pihole/setupVars.conf"
    regexp: "^CONDITIONAL_FORWARDING_DOMAIN=(.*)"
    line: "CONDITIONAL_FORWARDING_DOMAIN={{ pihole_conditional_forwarding.domain }}"
  notify: restart pihole container
  when: pihole_conditional_forwarding is defined and pihole_conditional_forwarding|length > 0

- name: add LAN forwarding to pi-hole setup - reverse
  lineinfile:
    path: "{{ ansible_user_dir }}/etc-pihole/setupVars.conf"
    regexp: "^CONDITIONAL_FORWARDING_REVERSE=(.*)"
    # this line reverses the router IP provided
    line: "CONDITIONAL_FORWARDING_REVERSE={{ pihole_conditional_forwarding.router_ip.split('.')[-2::-1]|join('.') }}.in-addr.arpa"
  notify: restart pihole container
  when: pihole_conditional_forwarding is defined and pihole_conditional_forwarding|length > 0

